export interface StandingOrder {
    id: number;
    version: number;
    tenantId: string;
    stoOrganizationLevelId: number;
    stoOrganizationLevelName: string;
    stoCreatedBranchId: number;
    stoCreatedBranchName: string;
    accountNoId: number;
    accountNo: string;
    schmCode: string;
    productId: number;
    productCode: string;
    subProductId: number;
    subProductCode: string;
    customerId: number;
    customerName: string;
    accountOpenOrganizationLevelId: number;
    accountOpenOrganizationLevelName: string;
    accountOpenBranchId: number;
    accountOpenBranchName: string;
    accountCreatedOrganizationLevelId: number;
    accountCreatedOrganizationLevelName: string;
    accountCreatedBranchId: number;
    accountCreatedBranchName: string;
    purpose: string;
    applicationFrequencyId: number;
    applicationFrequencyName: string;
    applicationFrequencyType: string;
    applicationFrequencyUnit: number;
    totalNoOfPayments: number;
    firstPaymentDate: string;
    firstPaymentCurrencyId: number;
    firstPaymentCurrencyCode: string;
    firstPaymentAmount: number;
    recurringPaymentDate: string;
    recurringPaymentCurrencyId: number;
    recurringPaymentCurrencyCode: string;
    recurringPaymentAmount: number;
    finalPaymentDate: string;
    finalPaymentCurrencyId: number;
    finalPaymentCurrencyCode: string;
    finalPaymentAmount: number;
    remainingNoOfPayments: number;
    priority?: any;
    paymentMethodId: number;
    paymentMethodName: string;
    accountType: string;
    externalInstitutionId: number;
    externalInstitutionName: string;
    externalInstitutionBranchId: number;
    extInstitutionBranchName: string;
    benificiaryName: string;
    benificiaryAccountNumber: string;
    benificiaryAccountNoId: number;
    processingType: string;
    transferType: string;
    status: string;
    createdUser: string;
    createdDate: string;
    modifiedUser?: any;
    modifiedDate?: any;
    approvedUser?: any;
    approvedDate?: any;
    cancelledUser: string;
    cancelledDate: string;
    cancelledRemark: string;
    standingOrderCharges?: any;
}

export interface StandingOrderSaveRequest {
    createdOrganizationLevelId: string;
    createdOrganizationLevelName: string;
    createdBranchId: string;
    createdBranchName: string;
    accountNo: string;
    purpose: string;
    applicationFrequencyId: string;
    applicationFrequencyName: string;
    totalNoOfPayments: string;
    firstPaymentDate: string;
    firstPaymentCurrencyId: string;
    firstPaymentCurrencyCode: string;
    firstPaymentAmount: string;
    recurringPaymentDate: string;
    recurringPaymentCurrencyId: string;
    recurringPaymentCurrencyCode: string;
    recurringPaymentAmount: string;
    finalPaymentDate: string;
    finalPaymentCurrencyId: string;
    finalPaymentCurrencyCode: string;
    finalPaymentAmount: string;
    remainingNoOfPayments: string;
    priority: string;
    paymentMethodId: string;
    paymentMethodName: string;
    accountType: string;
    externalInstitutionId: string;
    externalInstitutionName: string;
    externalInstitutionBranchId: string;
    extInstitutionBranchName: string;
    benificiaryName: string;
    benificiaryAccountNumber: string;
    benificiaryAccountId: string;
    processingType: string;
    transferType: string;
    charges: Charge[];
}

export interface Charge {
    feeChargeDetailId: number;
    feeCategoryId: string;
    feeCategoryCode: string;
    feeTypeId: string;
    feeTypeCode: string;
    amount: string;
    feeRate: string;
    feeIndicator: string;
    deductIndicator: string;
}